#!/bin/bash


[ -z "${1}" ] && \
{
    echo "=> Debes pasar como parámetro el directorio con ficheros markdown donde buscar imágenes ..."
    exit 1 ;
    
} || \
{
    [ -d "${1}" ] && \
    DIR_BASE_GITBOOK="${1}" || \
    {
        echo "=> El directorio indicado como parámetro no existe: ${1}"
        exit 2 ;
    }
}

SAVEIFS=$IFS   # Save current IFS
IFS=$'\n'      # Change IFS to new line

# Obtenemos la lista de todos los archivos que contienen imágenes:
# LISTADO=("../curso-de-tutores-vuepress/docs/content/4_temporizacin.md:![](img/notebook-428293_1280.jpg)")
LISTADO=($(grep -R ".*\!\[[^]]*\]([^~].*)" "${DIR_BASE_GITBOOK}"))

for ELE in "${LISTADO[@]}" ; do
    # ELE tiene el siguiente formato:
    # docs/1_obligaciones_del_tutor.md:![](/assets/buentutor.png)
    # docs/index1.md:![logo Aularagón](img/Aularagon.jpg)
    # Rescatamos la ruta del archivo con "%%:*":
    # Con "%:*" si el patrón fuera "docs/content/index1.md:[![logo](img/img.jpg)](http://...)" obtendríamos a partir del "http:":
    FICH="${ELE%%:*}"
    echo -e "###\n=> Inspeccionando el archivo: \"${FICH}\""
    # Extraemos la 2parte del patrón encontrado por el grep correspondiente a la imagen en markdown:
    MARKDOWNIMG="${ELE#*:}"
    echo "=> Imagen markdown: \"${MARKDOWNIMG}\""
    # Rescatamos el Texto Alternativo que hay entre "![...](":
    # AUX="${ELE#*\![}"
    # TEXTO_ALTERNATIVO="${ELE%%](*}"
    TEXTO_ALTERNATIVO="$(echo "${ELE#*:}" | sed -e 's#.*\!\[\([^]]*\)\](\([^)]*\)).*#\1#')"
    echo "=> TEXTO_ALTERNATIVO: \"${TEXTO_ALTERNATIVO}\""
    # Rescatamos la ruta de la imagen que se encuentra entre ():
    RUTA_IMAGEN_CON_TOOLTIP="$(echo "${ELE#*:}" | sed -e 's#.*\!\[\([^]]*\)\](\([^)]*\)).*#\2#')"
    # En imagenes del tipo: ![balance](img/balanza.png "Balanza")
    # La RUTA_IMAGEN_CON_TOOLTIP será: img/balanza.png "Balanza"
    RUTA_IMAGEN="${RUTA_IMAGEN_CON_TOOLTIP// */}" # => img/balanza.png
    TOOLTIP="${RUTA_IMAGEN_CON_TOOLTIP//* /}" # => "Balanza" (Texto al poner el ratón encima)
    echo "=> RUTA_IMAGEN: \"${RUTA_IMAGEN}\""
    # Comprobamos que la ruta no es de una URL de un servicio externo: https:// ftp:// mailto:// ...
    if [[ -f "${FICH}" && ! "${RUTA_IMAGEN}" =~ :// ]] ; then
        if [ -f "${DIR_BASE_GITBOOK}/${RUTA_IMAGEN}" ] ; then
            # Comprobamos si la extensión esta en minúsculas para evitar problemas con Webpack:
            EXTENSION="${RUTA_IMAGEN##*.}"
            RUTA_IMAGEN_SIN_EXTENSION="${RUTA_IMAGEN%.*}"
            DIRBASE="$(dirname "${RUTA_IMAGEN##/}")"
            if echo "${EXTENSION}" | grep -qE "[A-Z]" ; then
                # Cambiamos el nombre de la imagen pasándola a minúsculas:
                EXTENSION="$(echo "${EXTENSION}" | tr '[:upper:]' '[:lower:]')"
                RUTA_IMAGEN_NEW="${RUTA_IMAGEN_SIN_EXTENSION}.${EXTENSION}"
                mv "${DIR_BASE_GITBOOK}/${RUTA_IMAGEN}" "${DIR_BASE_GITBOOK}/${RUTA_IMAGEN_NEW}"
                IMAGEN="$(basename "${RUTA_IMAGEN_NEW}")"
            else
                IMAGEN="$(basename "${RUTA_IMAGEN}")"
            fi
            SUSTITUCION="![${TEXTO_ALTERNATIVO}](~@${DIRBASE}/${IMAGEN} ${TOOLTIP})"
            # REGEX='\!\[${TEXTO_ALTERNATIVO}\](${RUTA_IMAGEN})'
            sed -i "s;\!\[${TEXTO_ALTERNATIVO}\](${RUTA_IMAGEN}[^)]*);${SUSTITUCION};g" "${FICH}" && \
            {
                echo "=> Ruta IMAGEN Corregida: ${FICH} => \"${MARKDOWNIMG}\" : \"${SUSTITUCION}\"" ;
            } || \
            echo "=> ¡¡Problemas para corregir la ruta de la IMAGEN: ${FICH} : ${MARKDOWNIMG}"
        else
            echo "=> ¡¡Problema!! La imagen ${RUTA_IMAGEN} no se ha podido corregir, no existe ..."
        fi
    else
        echo "=> ¡¡Ruta IMAGEN basada en URL ... no hacemos nada!!"
    fi
done

echo "Total imagenes encontradas: ${#LISTADO[@]}"

IFS=$SAVEIFS